{"version":3,"sources":["webpack:///node_modules/sortablejs/modular/sortable.esm.js","webpack:///node_modules/ngx-sortablejs/fesm2015/ngx-sortablejs.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","hasOwnProperty","call","apply","this","_objectSpread","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","propertyIsEnumerable","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","parentNode","closest","ctx","includeCTX","_throttleTimeout","R_SPACE","toggleClass","name","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","getChild","childNum","options","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","isRectEqual","rect1","rect2","Math","round","throttle","callback","ms","args","_this","setTimeout","scrollBy","x","y","Polymer","$","jQuery","Zepto","dom","cloneNode","expando","Date","getTime","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","push","pluginEvent","eventName","sortable","evt","eventCanceled","cancel","eventNameGlobal","pluginName","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","_ref","undefined","originalEvent","data","bind","dragEl","parentEl","ghostEl","rootEl","nextEl","lastDownEl","cloneEl","cloneHidden","dragStarted","moved","putSortable","activeSortable","active","oldIndex","oldDraggableIndex","newIndex","newDraggableIndex","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","targetEl","toEl","fromEl","extraEventProperties","onName","charAt","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","to","from","item","pullMode","lastPutMode","allEventProperties","dispatchEvent","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","clear","_prepareGroup","toFn","pull","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","nearest","touches","clientX","clientY","some","rect","threshold","emptyInsertThreshold","ret","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","animationCallbackId","animationStates","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","Number","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","captureAnimationState","slice","child","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","arr","animateAll","clearTimeout","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","sqrt","pow","animate","max","animationResetTimer","currentRect","duration","translateX","translateY","animatingX","animatingY","animated","_onMove","dragRect","targetRect","willInsertAfter","retVal","onMoveFn","onMove","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_generateId","str","src","href","sum","charCodeAt","_nextTick","_cancelNextTick","id","contains","_getDirection","type","touch","pointerType","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","button","isContentEditable","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","dx","dy","b","c","cssMatrix","appendChild","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","vertical","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","changed","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","dragElS1Opp","targetS1Opp","side1","scrolledPastTop","scrollBefore","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","dragIndex","nextElementSibling","after","moveVector","extra","axis","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","removeChild","save","handleEvent","dropEffect","toArray","order","getAttribute","items","set","destroy","Array","querySelectorAll","removeAttribute","utils","is","extend","dst","nextTick","cancelNextTick","detectDirection","element","_len","_key","create","version","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","autoScrolls","scrolling","clearAutoScrolls","autoScroll","pid","clearPointerElemChangedInterval","isFallback","scroll","scrollCustomFn","sens","scrollSensitivity","speed","scrollSpeed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","bubbleScroll","drop","toSortable","changedTouches","onSpill","Revert","Remove","startIndex","dragStart","_ref2","_ref3","_ref4","parentSortable","AutoScroll","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","dragOverBubble","nulling","ogElemScroller","newElem","GLOBALS","SortablejsBinding","isFormArray","insert","at","removeAt","reset","SortablejsBindings","bindingTargets","bindings","map","remove","SortablejsService","ngInjectableDef","factory","token","providedIn","globalConfig","service","zone","renderer","runInsideAngular","sortablejsInit","runOutsideAngular","changes","optionsChange","sortablejsOptions","isFirstChange","previousOptions","previousValue","currentOptions","currentValue","optionName","sortableInstance","sortablejsContainer","nativeElement","querySelector","emit","sortablejs","optionsWithoutEvents","overridenOptions","params","run","sortablejsCloneFunction","subitem","onAdd","transfer","getBindings","injectIntoEvery","proxyEvent","onRemove","provided","isCloning","getFromEvery","extractFromEvery","onUpdate","indexes","new","old","SortablejsModule","globalOptions","ngModule","providers","provide","useValue"],"mappings":"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","file":"x","sourcesContent":["/**!\n * Sortable 1.10.2\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar version = \"1.10.2\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !!\n    /*@__PURE__*/\n    navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\n\n\nfunction getChild(el, childNum, options) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && children[i] !== Sortable.dragged && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread({}, extraEventProperties, PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, [\"evt\"]);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    if (lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        threshold = sortable[expando].options.emptyInsertThreshold,\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (threshold && insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // assign target only if condition is true\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread({}, Sortable.utils, plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n","import { InjectionToken, Injectable, ɵɵdefineInjectable, EventEmitter, Directive, Optional, Inject, ElementRef, NgZone, Renderer2, Input, Output, NgModule } from '@angular/core';\nimport Sortable from 'sortablejs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst GLOBALS = new InjectionToken('Global config for sortablejs');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SortablejsBinding {\n    /**\n     * @param {?} target\n     */\n    constructor(target) {\n        this.target = target;\n    }\n    /**\n     * @param {?} index\n     * @param {?} item\n     * @return {?}\n     */\n    insert(index, item) {\n        if (this.isFormArray) {\n            this.target.insert(index, item);\n        }\n        else {\n            this.target.splice(index, 0, item);\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    get(index) {\n        return this.isFormArray ? this.target.at(index) : this.target[index];\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    remove(index) {\n        /** @type {?} */\n        let item;\n        if (this.isFormArray) {\n            item = this.target.at(index);\n            this.target.removeAt(index);\n        }\n        else {\n            item = this.target.splice(index, 1)[0];\n        }\n        return item;\n    }\n    // we need this to identify that the target is a FormArray\n    // we don't want to have a dependency on @angular/forms just for that\n    /**\n     * @private\n     * @return {?}\n     */\n    get isFormArray() {\n        // just checking for random FormArray methods not available on a standard array\n        return !!this.target.at && !!this.target.insert && !!this.target.reset;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsBinding.prototype.target;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SortablejsBindings {\n    /**\n     * @param {?} bindingTargets\n     */\n    constructor(bindingTargets) {\n        this.bindings = bindingTargets.map((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => new SortablejsBinding(target)));\n    }\n    /**\n     * @param {?} index\n     * @param {?} items\n     * @return {?}\n     */\n    injectIntoEvery(index, items) {\n        this.bindings.forEach((/**\n         * @param {?} b\n         * @param {?} i\n         * @return {?}\n         */\n        (b, i) => b.insert(index, items[i])));\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    getFromEvery(index) {\n        return this.bindings.map((/**\n         * @param {?} b\n         * @return {?}\n         */\n        b => b.get(index)));\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    extractFromEvery(index) {\n        return this.bindings.map((/**\n         * @param {?} b\n         * @return {?}\n         */\n        b => b.remove(index)));\n    }\n    /**\n     * @return {?}\n     */\n    get provided() {\n        return !!this.bindings.length;\n    }\n}\nif (false) {\n    /** @type {?} */\n    SortablejsBindings.prototype.bindings;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SortablejsService {\n}\nSortablejsService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root',\n            },] }\n];\n/** @nocollapse */ SortablejsService.ngInjectableDef = ɵɵdefineInjectable({ factory: function SortablejsService_Factory() { return new SortablejsService(); }, token: SortablejsService, providedIn: \"root\" });\nif (false) {\n    /** @type {?} */\n    SortablejsService.prototype.transfer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst getIndexesFromEvent = (/**\n * @param {?} event\n * @return {?}\n */\n(event) => {\n    if (event.hasOwnProperty('newDraggableIndex') && event.hasOwnProperty('oldDraggableIndex')) {\n        return {\n            new: event.newDraggableIndex,\n            old: event.oldDraggableIndex,\n        };\n    }\n    else {\n        return {\n            new: event.newIndex,\n            old: event.oldIndex,\n        };\n    }\n});\nconst ɵ0 = getIndexesFromEvent;\nclass SortablejsDirective {\n    /**\n     * @param {?} globalConfig\n     * @param {?} service\n     * @param {?} element\n     * @param {?} zone\n     * @param {?} renderer\n     */\n    constructor(globalConfig, service, element, zone, renderer) {\n        this.globalConfig = globalConfig;\n        this.service = service;\n        this.element = element;\n        this.zone = zone;\n        this.renderer = renderer;\n        this.runInsideAngular = false; // to be deprecated\n        // to be deprecated\n        this.sortablejsInit = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (Sortable && Sortable.create) { // Sortable does not exist in angular universal (SSR)\n            if (this.runInsideAngular) {\n                this.create();\n            }\n            else {\n                this.zone.runOutsideAngular((/**\n                 * @return {?}\n                 */\n                () => this.create()));\n            }\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const optionsChange = changes.sortablejsOptions;\n        if (optionsChange && !optionsChange.isFirstChange()) {\n            /** @type {?} */\n            const previousOptions = optionsChange.previousValue;\n            /** @type {?} */\n            const currentOptions = optionsChange.currentValue;\n            Object.keys(currentOptions).forEach((/**\n             * @param {?} optionName\n             * @return {?}\n             */\n            optionName => {\n                if (currentOptions[optionName] !== previousOptions[optionName]) {\n                    // use low-level option setter\n                    this.sortableInstance.option(optionName, this.options[optionName]);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.sortableInstance) {\n            this.sortableInstance.destroy();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    create() {\n        /** @type {?} */\n        const container = this.sortablejsContainer ? this.element.nativeElement.querySelector(this.sortablejsContainer) : this.element.nativeElement;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.sortableInstance = Sortable.create(container, this.options);\n            this.sortablejsInit.emit(this.sortableInstance);\n        }), 0);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getBindings() {\n        if (!this.sortablejs) {\n            return new SortablejsBindings([]);\n        }\n        else if (this.sortablejs instanceof SortablejsBindings) {\n            return this.sortablejs;\n        }\n        else {\n            return new SortablejsBindings([this.sortablejs]);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get options() {\n        return Object.assign({}, this.optionsWithoutEvents, this.overridenOptions);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get optionsWithoutEvents() {\n        return Object.assign({}, (this.globalConfig || {}), (this.sortablejsOptions || {}));\n    }\n    /**\n     * @private\n     * @param {?} eventName\n     * @param {...?} params\n     * @return {?}\n     */\n    proxyEvent(eventName, ...params) {\n        this.zone.run((/**\n         * @return {?}\n         */\n        () => {\n            if (this.optionsWithoutEvents && this.optionsWithoutEvents[eventName]) {\n                this.optionsWithoutEvents[eventName](...params);\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get isCloning() {\n        return this.sortableInstance.options.group.checkPull(this.sortableInstance, this.sortableInstance) === 'clone';\n    }\n    /**\n     * @private\n     * @template T\n     * @param {?} item\n     * @return {?}\n     */\n    clone(item) {\n        // by default pass the item through, no cloning performed\n        return (this.sortablejsCloneFunction || ((/**\n         * @param {?} subitem\n         * @return {?}\n         */\n        subitem => subitem)))(item);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get overridenOptions() {\n        // always intercept standard events but act only in case items are set (bindingEnabled)\n        // allows to forget about tracking this.items changes\n        return {\n            onAdd: (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                this.service.transfer = (/**\n                 * @param {?} items\n                 * @return {?}\n                 */\n                (items) => {\n                    this.getBindings().injectIntoEvery(event.newIndex, items);\n                    this.proxyEvent('onAdd', event);\n                });\n                this.proxyEvent('onAddOriginal', event);\n            }),\n            onRemove: (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                /** @type {?} */\n                const bindings = this.getBindings();\n                if (bindings.provided) {\n                    if (this.isCloning) {\n                        this.service.transfer(bindings.getFromEvery(event.oldIndex).map((/**\n                         * @param {?} item\n                         * @return {?}\n                         */\n                        item => this.clone(item))));\n                        // great thanks to https://github.com/tauu\n                        // event.item is the original item from the source list which is moved to the target list\n                        // event.clone is a clone of the original item and will be added to source list\n                        // If bindings are provided, adding the item dom element to the target list causes artifacts\n                        // as it interferes with the rendering performed by the angular template.\n                        // Therefore we remove it immediately and also move the original item back to the source list.\n                        // (event handler may be attached to the original item and not its clone, therefore keeping\n                        // the original dom node, circumvents side effects )\n                        this.renderer.removeChild(event.item.parentNode, event.item);\n                        this.renderer.insertBefore(event.clone.parentNode, event.item, event.clone);\n                        this.renderer.removeChild(event.clone.parentNode, event.clone);\n                    }\n                    else {\n                        this.service.transfer(bindings.extractFromEvery(event.oldIndex));\n                    }\n                    this.service.transfer = null;\n                }\n                this.proxyEvent('onRemove', event);\n            }),\n            onUpdate: (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                /** @type {?} */\n                const bindings = this.getBindings();\n                /** @type {?} */\n                const indexes = getIndexesFromEvent(event);\n                bindings.injectIntoEvery(indexes.new, bindings.extractFromEvery(indexes.old));\n                this.proxyEvent('onUpdate', event);\n            }),\n        };\n    }\n}\nSortablejsDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[sortablejs]',\n            },] }\n];\n/** @nocollapse */\nSortablejsDirective.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [GLOBALS,] }] },\n    { type: SortablejsService },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Renderer2 }\n];\nSortablejsDirective.propDecorators = {\n    sortablejs: [{ type: Input }],\n    sortablejsContainer: [{ type: Input }],\n    sortablejsOptions: [{ type: Input }],\n    sortablejsCloneFunction: [{ type: Input }],\n    runInsideAngular: [{ type: Input }],\n    sortablejsInit: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    SortablejsDirective.prototype.sortablejs;\n    /** @type {?} */\n    SortablejsDirective.prototype.sortablejsContainer;\n    /** @type {?} */\n    SortablejsDirective.prototype.sortablejsOptions;\n    /** @type {?} */\n    SortablejsDirective.prototype.sortablejsCloneFunction;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.sortableInstance;\n    /** @type {?} */\n    SortablejsDirective.prototype.runInsideAngular;\n    /** @type {?} */\n    SortablejsDirective.prototype.sortablejsInit;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.globalConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.service;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.renderer;\n}\n/**\n * @record\n */\nfunction SortableEvent() { }\nif (false) {\n    /** @type {?} */\n    SortableEvent.prototype.oldIndex;\n    /** @type {?} */\n    SortableEvent.prototype.newIndex;\n    /** @type {?|undefined} */\n    SortableEvent.prototype.oldDraggableIndex;\n    /** @type {?|undefined} */\n    SortableEvent.prototype.newDraggableIndex;\n    /** @type {?} */\n    SortableEvent.prototype.item;\n    /** @type {?} */\n    SortableEvent.prototype.clone;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SortablejsModule {\n    /**\n     * @param {?} globalOptions\n     * @return {?}\n     */\n    static forRoot(globalOptions) {\n        return {\n            ngModule: SortablejsModule,\n            providers: [\n                { provide: GLOBALS, useValue: globalOptions },\n            ],\n        };\n    }\n}\nSortablejsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [SortablejsDirective],\n                exports: [SortablejsDirective],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { SortablejsDirective, SortablejsModule, GLOBALS as ɵa, SortablejsService as ɵb };\n//# sourceMappingURL=ngx-sortablejs.js.map\n"]}